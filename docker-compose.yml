version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: sqlgym_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-sqlgym}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-sqlgym_password}
      - POSTGRES_DB=${POSTGRES_DB:-sqlgym}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sqlgym}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - sqlgym_network

  # Redis (Optional - with PostgreSQL fallback)
  redis:
    image: redis:7-alpine
    container_name: sqlgym_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - sqlgym_network

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: sqlgym_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-sqlgym}:${POSTGRES_PASSWORD:-sqlgym_password}@db:5432/${POSTGRES_DB:-sqlgym}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - ADMIN_SECRET_KEY=${ADMIN_SECRET_KEY:-change-this-admin-secret}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sqlgym_network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: sqlgym_frontend
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - sqlgym_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  sqlgym_network:
    driver: bridge
